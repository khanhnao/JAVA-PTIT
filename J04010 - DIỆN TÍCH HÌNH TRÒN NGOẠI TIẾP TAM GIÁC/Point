package com.mycompany.java.ptit;

public class Point {
    private double x, y;
    
    Point() {
        x = 0;
        y = 0;
    }
    
    Point(double x, double y) {
        this.x = x;
        this.y = y;
    }
    
    Point(Point P) {
        this.x = P.x;
        this.y = P.y;
    }
    
    public double getX() {
        return x;
    }
    
    public double getY() {
        return y;
    }
    
    public double distance(Point p2) {
        return Math.sqrt((this.x - p2.x) * (this.x - p2.x) + (this.y - p2.y) * (this.y - p2.y));
    }
    
    public double distance(Point p1, Point p2) {
        return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y));
    }
    
    public double checkTriangle(Point p1, Point p2) {
        double d1 = this.distance(p1);
        double d2 = this.distance(p2);
        double d3 = p1.distance(p2);
        if(d1 + d2 > d3 && d1 + d3 > d2 && d2 + d3 > d1) {
            return d1 + d2 + d3;
        }
        return -1;
    }
    
    public double checkTriangle2(Point p1, Point p2) {
        double d1 = this.distance(p1);
        double d2 = this.distance(p2);
        double d3 = p1.distance(p2);
        if(d1 + d2 > d3 && d1 + d3 > d2 && d2 + d3 > d1) {
            return Math.sqrt((d1 + d2 + d3) * (d1 + d2 - d3) * (-d1 + d2 + d3) * (d1 - d2 + d3)) * 1 / 4;
        }
        return -1;
    }
    
    public double checkTriangle3(Point p1, Point p2) {
        double d1 = this.distance(p1);
        double d2 = this.distance(p2);
        double d3 = p1.distance(p2);
        if(d1 + d2 > d3 && d1 + d3 > d2 && d2 + d3 > d1) {
            double S = Math.sqrt((d1 + d2 + d3) * (d1 + d2 - d3) * (-d1 + d2 + d3) * (d1 - d2 + d3)) * 1 / 4;
            double R = (d1 * d2 * d3) / (4 * S);
            return Math.PI * R * R;
        }
        return -1;
    }
}
